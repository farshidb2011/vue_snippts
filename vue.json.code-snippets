{
    "Vue Init": {
        "prefix": "vue",
        "body": [
            "<script setup>",
            "import { ref } from 'vue';",
            "",
            "</script>",
            "",
            "<template>",
            "",
            "</template>",
            "",
            "<style scoped>",
            "",
            "</style>"
        ],
        "description": "Initial vue content"
    },
    "watch": {
        "prefix": "vwatch",
        "body": [
            "watch(${1:var}, (${2}, ${3}) => {",
            "\t${4}",
            "});"
        ],
        "description": "Vue watch snippet"
    },
    "computed": {
        "prefix": "vcomputed",
        "body": [
            "const ${1:var} = computed(() => {",
            "\t${2}",
            "});"
        ],
        "description": "Vue computed snippet"
    },
    "ref": {
        "prefix": "vref",
        "body": [
            "const ${1:var} = ref(${2});"
        ],
        "description": "Vue ref snippet"
    },
    "reactive": {
        "prefix": "vreactive",
        "body": [
            "const ${1:var} = reactive({",
            "\t${2}",
            "});"
        ],
        "description": "Vue reactive snippet"
    },
    "vue props": {
        "prefix": "vprops",
        "body": [
            "const props = defineProps({",
            "\t${1:prop}: {",
            "\t\ttype: ${2:String},",
            "\t\tdefault: ${3:defaultValue}",
            "\t}",
            "});"
        ],
        "description": "Vue props snippet"
    },
    "vue prop": {
        "prefix": "vprop",
        "body": [
            "${1:prop}: {",
            "\ttype: ${2:String},",
            "\tdefault: ${3:defaultValue}",
            "},"
        ],
        "description": "Vue props snippet"
    },
    "vue emits": {
        "prefix": "vemits",
        "body": [
            "defineEmits({",
            "\t${1:event}: {",
            "\t\ttype: ${2:String},",
            "\t\tdefault: ${3:defaultValue}",
            "\t}",
            "});"
        ],
        "description": "Vue emits snippet"
    },
    "vue async func": {
        "prefix": "vasync",
        "body": [
            "const ${1:func} = async (${2}) => {",
            "\t${3}",
            "};"
        ],
        "description": "Vue async function snippet"
    },
    "vue function": {
        "prefix": "vfunc",
        "body": [
            "const ${1:func} = (${2}) => {",
            "\t${3}",
            "};"
        ],
        "description": "Vue function snippet"
    },
    "vue method": {
        "prefix": "vmethod",
        "body": [
            "${1:func}(${2}) {",
            "\t${3}",
            "}"
        ],
        "description": "Vue method snippet"
    },
    "vue tryc": {
        "prefix": "vtryc",
        "body": [
            "try {",
            "\t${1}",
            "} catch (error) {",
            "\t${2}",
            "} finally {",
            "\t${3}",
            "}"
        ],
        "description": "Vue try catch snippet"
    },
    "vue axios": {
        "prefix": "vaxios",
        "body": [
            "const ${1:res} = await ${2};"
        ],
        "description": "Vue axios snippet"
    },
    "primevue tab": {
        "prefix": "ptab",
        "body": [
            "<Tabs value=\"${1:0}\">",
            "\t<TabList>",
            "\t\t<Tab value=\"${2:0}\">",
            "\t\t\t${3}",
            "\t\t</Tab>",
            "\t</TabList>",
            "\t<TabPanels>",
            "\t\t<TabPanel value=\"${4:0}\">",
            "\t\t\t${5}",
            "\t\t</TabPanel>",
            "\t</TabPanels>",
            "</Tabs>"
        ],
        "description": "PrimeVue tab snippet"
    }
}